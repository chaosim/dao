#!wing
#!version=4.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('oad/builtins/type.py'): {78: (0,
        None,
        1,
        0)},
                     loc('oad/dinpy.py'): {34: (0,
        None,
        1,
        0),
        87: (0,
             None,
             1,
             0)}}
debug.err-values = {None: {},
                    loc('file:D:/Wing IDE 4.0/src/testing/runners/run_nosetests_xml.py'): {},
                    loc('file:D:/Wing IDE 4.0/src/testing/runners/run_unittests_xml.py'): {},
                    loc('oad/eval.py'): {},
                    loc('oad/syntax.py'): {}}
debug.show-args-dialog = {loc('file:D:/Wing IDE 4.0/src/testing/runners/run_nosetests_xml.py'): False,
                          loc('oad/__init__.py'): False,
                          loc('oad/ccg.py'): False,
                          loc('oad/dinpy.py'): False,
                          loc('oad/env.py'): False,
                          loc('oad/eval.py'): False,
                          loc('oad/pycfg.py'): False,
                          loc('oad/rule.py'): False,
                          loc('oad/syntax.py'): False,
                          loc('oad/term.py'): False,
                          loc('oad/tests/testdinpy.py'): False,
                          loc('oad/tests/testeval.py'): False,
                          loc('oad/tests/testsyntax.py'): False,
                          loc('samples/sample.py'): False}
debug.var-col-widths = [0.37384140061791965,
                        0.62615859938208029]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'p9A3wsbO86BXOlsEDEqauazJ9L'\
        'HRyMuO',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2,
                                   0],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.23529411764705882,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(1,),
        (2,)],
                                 'selected-nodes': [(2,
        1)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('snippets',
                               'tall',
                               1,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:D:/Wing IDE 4.0/src/testing/runners/run_doctests_xml.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/Wing IDE 4.0/src/testing/runners/run_doctests_xml.py'),
                      'CDoctestRunner')]},
        loc('file:D:/Wing IDE 4.0/src/testing/runners/wingtest_common.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/Wing IDE 4.0/src/testing/runners/wingtest_common.py'),
                      'CreateOutputStream')]},
        loc('file:d:/python26/Lib/codecs.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/codecs.py'),
                      'BufferedIncrementalDecoder')]},
        loc('file:d:/python26/Lib/pickle.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:d:/python26/Lib/pickle.py'),
                      'APPEND')]},
        loc('file:d:/python26/Lib/re.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:d:/python26/Lib/re.py'),
                      'compile')]},
        loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/case.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/case.py'),
                      'FunctionTestCase')]},
        loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/failure.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/failure.py'),
                      'Failure')]},
        loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/importer.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/importer.py'),
                      'add_path')]},
        loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/loader.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/loader.py'),
                      'TestLoader')]},
        loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/tools.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/tools.py'),
                      'Dummy')]},
        loc('file:d:/python26/Lib/site-packages/yieldprolog/BagofAnswers.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/yieldprolog/BagofAnswers.py'),
                      'BagofAnswers')]},
        loc('file:d:/python26/Lib/site-packages/yieldprolog/FindallAnswers.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:d:/python26/Lib/site-packages/yieldprolog/FindallAnswers.py'),
                             'FindallAnswers')]],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/yieldprolog/FindallAnswers.py'),
                      'FindallAnswers')]},
        loc('file:d:/python26/Lib/site-packages/yieldprolog/Functor1.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/yieldprolog/Functor1.py'),
                      'Functor1')]},
        loc('file:d:/python26/Lib/site-packages/yieldprolog/Functor2.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/yieldprolog/Functor2.py'),
                      'Functor2')]},
        loc('file:d:/python26/Lib/site-packages/yieldprolog/ListPair.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:d:/python26/Lib/site-packages/yieldprolog/ListPair.py'),
                             'ListPair')]],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/yieldprolog/ListPair.py'),
                      'ListPair')]},
        loc('file:d:/python26/Lib/site-packages/yieldprolog/PrologException.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/yieldprolog/PrologException.py'),
                      'PrologException')]},
        loc('file:d:/python26/Lib/site-packages/yieldprolog/Variable.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [[('class def',
                             loc('file:d:/python26/Lib/site-packages/yieldprolog/Variable.py'),
                             'Variable')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/yieldprolog/Variable.py'),
                      'IUnifiable')]},
        loc('file:d:/python26/Lib/site-packages/yieldprolog/YP.py'): {'colum'\
        'n-widths': [1.0],
        'expanded-nodes': [[('class def',
                             loc('file:d:/python26/Lib/site-packages/yieldprolog/YP.py'),
                             'YP')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:d:/python26/Lib/site-packages/yieldprolog/YP.py'),
                      'YP')]},
        loc('file:d:/python26/Lib/site-packages/yieldprolog/__init__.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:d:/python26/Lib/site-packages/yieldprolog/Atom.py'),
                      '')]},
        loc('file:d:/python26/Lib/unittest.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:d:/python26/Lib/unittest.py'),
                      'findTestCases')]},
        loc('../daot/dao/cont.py'): {'column-widths': [1.0],
                                     'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('class def',
        loc('../daot/dao/cont.py'),
        'BodyContinuation')]},
        loc('../daot/dao/eval.py'): {'column-widths': [1.0],
                                     'expanded-nodes': [],
                                     'selected-nodes': [[('function def',
        loc('../daot/dao/eval.py'),
        'on_quote')]],
                                     'top-node': [('function def',
        loc('../daot/dao/eval.py'),
        'apply_cont')]},
        loc('../daot/dao/rule.py'): {'column-widths': [1.0],
                                     'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('class def',
        loc('../daot/dao/rule.py'),
        'Rule')]},
        loc('../daot/dao/term.py'): {'column-widths': [1.0],
                                     'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('class def',
        loc('../daot/dao/term.py'),
        'Atom')]},
        loc('../daot/dao/tests/testeval.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../daot/dao/tests/testeval.py'),
                      'TestEval')]},
        loc('../daot/dao/tests/testsexpression.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../daot/dao/tests/testsexpression.py'),
                      'Testeval')]},
        loc('oad/__init__.py'): {'column-widths': None,
                                 'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': [('generic attribute',
        loc('oad/builtin.py'),
        '')]},
        loc('oad/builtin.py'): {'column-widths': [1.0],
                                'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('class def',
        loc('oad/builtin.py'),
        'Builtin')]},
        loc('oad/builtins/__init__.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('oad/builtins/arith.py'),
                      '')]},
        loc('oad/builtins/arith.py'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('oad/builtins/arith.py'),
        'add')]},
        loc('oad/builtins/arithpred.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('oad/builtins/arithpred.py'),
                      'arithmeticCmpPredicate')]},
        loc('oad/builtins/atom.py'): {'column-widths': [1.0],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('function def',
        loc('oad/builtins/atom.py'),
        'atom_concat')]},
        loc('oad/builtins/callcc.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('oad/builtins/callcc.py'),
                      'callcc')]},
        loc('oad/builtins/control.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('oad/builtins/control.py'),
                      'and_')]},
        loc('oad/builtins/findall.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('oad/builtins/findall.py'),
                      'findall')]},
        loc('oad/builtins/matchterm.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('oad/builtins/matchterm.py'),
                      'any')]},
        loc('oad/builtins/module.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('oad/builtins/module.py'),
                      'from_')]},
        loc('oad/builtins/parser.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('oad/builtins/parser.py'),
                      'goto')]},
        loc('oad/builtins/quasiquote.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('oad/builtins/rule.py'): {'column-widths': [1.0],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('function def',
        loc('oad/builtins/rule.py'),
        'abolish')]},
        loc('oad/builtins/term.py'): {'column-widths': [1.0],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('class def',
        loc('oad/builtins/term.py'),
        'ArgContinuation')]},
        loc('oad/builtins/terminal.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('oad/builtins/terminal.py'),
                             'nullword')]],
        'top-node': [('function def',
                      loc('oad/builtins/terminal.py'),
                      'char')]},
        loc('oad/builtins/tests/testbuiltin.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('oad/builtins/tests/testbuiltin.py'),
                      'TestArithpred')]},
        loc('oad/builtins/tests/testparser.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('oad/builtins/tests/testparser.py'),
                      'TestAnySomeTimesSepList')]},
        loc('oad/builtins/type.py'): {'column-widths': [1.0],
                                      'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('oad/builtins/type.py'),
        'make_apply')]],
                                      'top-node': [('function def',
        loc('oad/builtins/type.py'),
        'bound')]},
        loc('oad/builtins/unify.py'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('oad/builtins/unify.py'),
        'notunify')]},
        loc('oad/ccg.py'): {'column-widths': [1.0],
                            'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('function def',
        loc('oad/ccg.py'),
        'add_cont')]},
        loc('oad/cont.py'): {'column-widths': [1.0],
                             'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('class def',
        loc('oad/cont.py'),
        'BodyContinuation')]},
        loc('oad/dinpy.py'): {'column-widths': [1.0],
                              'expanded-nodes': [],
                              'selected-nodes': [[('function def',
        loc('oad/dinpy.py'),
        'dummies')]],
                              'top-node': [('function def',
        loc('oad/dinpy.py'),
        'dummies')]},
        loc('oad/env.py'): {'column-widths': [1.0],
                            'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('class def',
        loc('oad/env.py'),
        'BlockEnvironment')]},
        loc('oad/error.py'): {'column-widths': [1.0],
                              'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('class def',
        loc('oad/error.py'),
        'CatchableError')]},
        loc('oad/eval.py'): {'column-widths': [1.0],
                             'expanded-nodes': [],
                             'selected-nodes': [[('class def',
        loc('oad/eval.py'),
        'CutException')]],
                             'top-node': [('class def',
        loc('oad/eval.py'),
        'CutException')]},
        loc('oad/parse.py'): {'column-widths': [1.0],
                              'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('function def',
        loc('oad/parse.py'),
        'eval')]},
        loc('oad/pycfg.py'): {'column-widths': [1.0],
                              'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('class def',
        loc('oad/pycfg.py'),
        'ActElement')]},
        loc('oad/pysyntax.py'): {'column-widths': [1.0],
                                 'expanded-nodes': [],
                                 'selected-nodes': [[('function def',
        loc('oad/pysyntax.py'),
        'parse')]],
                                 'top-node': [('function def',
        loc('oad/pysyntax.py'),
        'binary')]},
        loc('oad/rule.py'): {'column-widths': [1.0],
                             'expanded-nodes': [],
                             'selected-nodes': [[('class def',
        loc('oad/rule.py'),
        'Rule')]],
                             'top-node': [('class def',
        loc('oad/rule.py'),
        'Rule')]},
        loc('oad/solve.py'): {'column-widths': [1.0],
                              'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('function def',
        loc('oad/solve.py'),
        'cut')]},
        loc('oad/special.py'): {'column-widths': [1.0],
                                'expanded-nodes': [],
                                'selected-nodes': [[('class def',
        loc('oad/special.py'),
        'begin')]],
                                'top-node': [('class def',
        loc('oad/special.py'),
        'begin')]},
        loc('oad/syntax.py'): {'column-widths': [1.0],
                               'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('class def',
        loc('oad/syntax.py'),
        'AppendFunction')]},
        loc('oad/term.py'): {'column-widths': [1.0],
                             'expanded-nodes': [[('class def',
        loc('oad/term.py'),
        'DummyVar')]],
                             'selected-nodes': [],
                             'top-node': [('class def',
        loc('oad/term.py'),
        'Apply')]},
        loc('oad/tests/testdinpy.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('oad/tests/testdinpy.py'),
                      'TestAssignVariable')]},
        loc('oad/tests/testeval.py'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('oad/tests/testeval.py'),
        'TestCallccBlockCatch')]},
        loc('oad/tests/testpycfg.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('oad/tests/testpycfg.py'),
                      'TestElement')]},
        loc('oad/tests/testpysyntax.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('oad/tests/testpysyntax.py'),
                      'TestParse')]},
        loc('oad/tests/testsyntax.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('oad/tests/testsyntax.py'),
                      'syntax_data')]},
        loc('oad/testutil.py'): {'column-widths': [1.0],
                                 'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': [('function def',
        loc('oad/testutil.py'),
        'xxxcleanup_vars')]},
        loc('samples/sample.py'): {'column-widths': [1.0],
                                   'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': None},
        loc('samples/sexpression.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/deepparse.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/know/concept.py'): {'co'\
        'lumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/know/conceptgraph.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/know/conceptgraph.py'),
                      'ConceptGraph')]},
        loc('../web2py_src/applications/seer/modules/know/constraint.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/know/constraint.py'),
                             'All_Value_Equal')]],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/know/constraint.py'),
                      'All_Value_Equal')]},
        loc('../web2py_src/applications/seer/modules/know/define.py'): {'col'\
        'umn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/know/define.py'),
                      'agent')]},
        loc('../web2py_src/applications/seer/modules/know/element.py'): {'co'\
        'lumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/know/element.py'),
                      'aggregate')]},
        loc('../web2py_src/applications/seer/modules/know/knowledgebase.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/know/knowledgebase.py'),
                      'CompoundKnowledgeBase')]},
        loc('../web2py_src/applications/seer/modules/know/link.py'): {'colum'\
        'n-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/know/query.py'): {'colu'\
        'mn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/know/query.py'),
                      'CompountdQuery')]},
        loc('../web2py_src/applications/seer/modules/know/relation.py'): {'c'\
        'olumn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/know/relation.py'),
                      'aggregate')]},
        loc('../web2py_src/applications/seer/modules/know/tests/testcavnet.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/know/tests/testcavnet.py'),
                      'acitve_in_night')]},
        loc('../web2py_src/applications/seer/modules/know/tests/testcomplexconcept.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/know/tests/testconceptgraph.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/know/tests/testconceptgraph.py'),
                      'acitve_in_night')]},
        loc('../web2py_src/applications/seer/modules/know/tests/testconcpet.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/know/tests/testconcpet.py'),
                      'acitve_in_night')]},
        loc('../web2py_src/applications/seer/modules/know/tests/testconcpet2.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/know/tests/testconcpet2.py'),
                      'CreateKnowledgeBase')]},
        loc('../web2py_src/applications/seer/modules/know/tests/testknowledge.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/know/tests/testknowledge.py'),
                      'acitve_in_night')]},
        loc('../web2py_src/applications/seer/modules/know/tests/testknowledgebase.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/know/tests/testknowledgebase.py'),
                      'acitve_in_night')]},
        loc('../web2py_src/applications/seer/modules/know/tests/testquery.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/know/tests/testquery.py'),
                      'TestQuery')]},
        loc('../web2py_src/applications/seer/modules/know/tests/testtriplekb.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/know/tests/testtriplekb.py'),
                      'acitve_in_night')]},
        loc('../web2py_src/applications/seer/modules/know/value.py'): {'colu'\
        'mn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/know/var.py'): {'column'\
        '-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/know/var.py'),
                      'Var')]},
        loc('../web2py_src/applications/seer/modules/knowledge/define.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/linguistics/charfreq.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/linguistics/charfreq.py'),
                      'sortWriteDict')]},
        loc('../web2py_src/applications/seer/modules/linguistics/charfreq2.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/linguistics/charfreq2.py'),
                      'charfreq22')]},
        loc('../web2py_src/applications/seer/modules/linguistics/charfrequency.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/charfrequency.py'),
                      'Frequency')]},
        loc('../web2py_src/applications/seer/modules/linguistics/const.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/linguistics/deepparse.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/linguistics/deepparse.py'),
                             'ConceptMeaningParser')]],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/deepparse.py'),
                      'ConceptMeaningParser')]},
        loc('../web2py_src/applications/seer/modules/linguistics/define.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/linguistics/featureparse.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/linguistics/featureparse.py'),
                             'Parser')]],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/featureparse.py'),
                      'Agenda')]},
        loc('../web2py_src/applications/seer/modules/linguistics/geneparser.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/geneparser.py'),
                      'Parser')]},
        loc('../web2py_src/applications/seer/modules/linguistics/generate.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/linguistics/generate.py'),
                             'ConceptMeaningGenerator')]],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/generate.py'),
                      'ConceptMeaningGenerator')]},
        loc('../web2py_src/applications/seer/modules/linguistics/lexer.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/linguistics/lexer.py'),
                      'GetWordStateMachine')]},
        loc('../web2py_src/applications/seer/modules/linguistics/linguist.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/linguistics/linguist.py'),
                             'Linguist')]],
        'selected-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/linguistics/linguist.py'),
                             'Linguist')]],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/linguist.py'),
                      'ConceptMeaning')]},
        loc('../web2py_src/applications/seer/modules/linguistics/linguistdefine.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../web2py_src/applications/seer/modules/linguistics/linguistdefine.py'),
                             'M_IS')]],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/linguistics/linguistdefine.py'),
                      'M_IS')]},
        loc('../web2py_src/applications/seer/modules/linguistics/memory.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/linguistics/memory.py'),
                      'char2_freq_memory')]},
        loc('../web2py_src/applications/seer/modules/linguistics/mouth.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/linguistics/parse.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/linguistics/parse.py'),
                             'Parser')]],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/parse.py'),
                      'CompoundPattern')]},
        loc('../web2py_src/applications/seer/modules/linguistics/pattern.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/pattern.py'),
                      'Collocation')]},
        loc('../web2py_src/applications/seer/modules/linguistics/placename.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/linguistics/placename.py'),
                      'get_chars_in_words')]},
        loc('../web2py_src/applications/seer/modules/linguistics/talk.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/linguistics/talk.py'),
                             'Talker')]],
        'selected-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/linguistics/talk.py'),
                             'Talker')]],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/talk.py'),
                      'Ear')]},
        loc('../web2py_src/applications/seer/modules/linguistics/tests/testdeepparse.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/linguistics/tests/testdeepparse.py'),
                      'M')]},
        loc('../web2py_src/applications/seer/modules/linguistics/tests/testgenerate.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/tests/testgenerate.py'),
                      'TestConceptMeaningGenerator')]},
        loc('../web2py_src/applications/seer/modules/linguistics/tests/testlexer.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/tests/testlexer.py'),
                      'TestSplitter')]},
        loc('../web2py_src/applications/seer/modules/linguistics/tests/testtalk.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/linguistics/tests/testtalk.py'),
                      'TestTalker')]},
        loc('../web2py_src/applications/seer/modules/linguistics/tests/testword.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/linguistics/tests/testword.py'),
                      'testcc2d')]},
        loc('../web2py_src/applications/seer/modules/linguistics/util.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/linguistics/util.py'),
                      'copy_file')]},
        loc('../web2py_src/applications/seer/modules/linguistics/word.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/linguistics/word.py'),
                      'depend_direction')]},
        loc('../web2py_src/applications/seer/modules/linguistics/wordfreq.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/linguistics/wordfreq.py'),
                      'get_word_freq')]},
        loc('../web2py_src/applications/seer/modules/linguistics/wordfreq_text.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/linguistics/wordsplit.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/linguistics/wordsplit.py'),
                      'countWordType')]},
        loc('../web2py_src/applications/seer/modules/seer/clc.py'): {'column'\
        '-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/seer/clc.py'),
                      'Sentence')]},
        loc('../web2py_src/applications/seer/modules/seer/concept.py'): {'co'\
        'lumn-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/seer/concept.py'),
                      'add_concept2attr')]},
        loc('../web2py_src/applications/seer/modules/seer/conceptgraph.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/seer/conceptgraph.py'),
                      'ConceptGraph')]},
        loc('../web2py_src/applications/seer/modules/seer/define.py'): {'col'\
        'umn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/seer/define.py'),
                      'agent')]},
        loc('../web2py_src/applications/seer/modules/seer/defines.py'): {'co'\
        'lumn-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/seer/defines.py'),
                      'agent')]},
        loc('../web2py_src/applications/seer/modules/seer/dependconcept.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../web2py_src/applications/seer/modules/seer/element.py'): {'co'\
        'lumn-widths': [1.0],
        'expanded-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/seer/element.py'),
                             'Element')]],
        'selected-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/seer/element.py'),
                             'Relation')]],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/seer/element.py'),
                      'Element'),
                     ('function def',
                      loc('../web2py_src/applications/seer/modules/seer/element.py'),
                      'Element.is_super')]},
        loc('../web2py_src/applications/seer/modules/seer/executive.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/seer/executive.py'),
                      'Executive')]},
        loc('../web2py_src/applications/seer/modules/seer/graph/digraph.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/seer/graph/digraph.py'),
                      'DiGraph')]},
        loc('../web2py_src/applications/seer/modules/seer/knowledge.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/seer/knowledge.py'),
                      'All_Value_Equal')]},
        loc('../web2py_src/applications/seer/modules/seer/knowledgebase.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/seer/knowledgebase.py'),
                             'KnowledgeBase')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/seer/knowledgebase.py'),
                      'CompoundKnowledgeBase')]},
        loc('../web2py_src/applications/seer/modules/seer/mongo.py'): {'colu'\
        'mn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/seer/mongo.py'),
                      'asserts')]},
        loc('../web2py_src/applications/seer/modules/seer/query.py'): {'colu'\
        'mn-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/seer/query.py'),
                      'CompountdQuery')]},
        loc('../web2py_src/applications/seer/modules/seer/tests/testconceptgraph.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/seer/tests/testconceptgraph.py'),
                      'acitve_in_night')]},
        loc('../web2py_src/applications/seer/modules/seer/tests/testdependconcept.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/seer/tests/testdependconcept.py'),
                      'concept2attr')]},
        loc('../web2py_src/applications/seer/modules/seer/tests/testquery.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/seer/tests/testquery.py'),
                      'agent')]},
        loc('../web2py_src/applications/seer/modules/seer/tests/testtriple.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../web2py_src/applications/seer/modules/seer/tests/testtriple.py'),
                      'TestTripleList')]},
        loc('../web2py_src/applications/seer/modules/seer/tests/testtriple2.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/seer/tests/testtriple2.py'),
                      'acitve_in_night')]},
        loc('../web2py_src/applications/seer/modules/seer/tests/testtriplekb.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/seer/tests/testtriplekb.py'),
                      'acitve_in_night')]},
        loc('../web2py_src/applications/seer/modules/seer/triple.py'): {'col'\
        'umn-widths': [1.0],
        'expanded-nodes': [[('class def',
                             loc('../web2py_src/applications/seer/modules/seer/triple.py'),
                             'TripleList')]],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../web2py_src/applications/seer/modules/seer/triple.py'),
                      're_spaces')]},
        loc('../web2py_src/applications/seer/modules/seer/util.py'): {'colum'\
        'n-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../web2py_src/applications/seer/modules/seer/util.py'),
                      'find')]},
        loc('../web2py_src/applications/seer/modules/seer/words.py'): {'colu'\
        'mn-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #4'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #5'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #6'): {'column-widths': None,
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #7'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #10'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('unknown:<untitled> #8'),
                             'And')]],
        'top-node': [('class def',
                      loc('unknown:<untitled> #9'),
                      'And')]},
        loc('unknown:<untitled> #11'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #12'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #13'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #3'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('unknown:<untitled> #2'),
        'g2')]},
        loc('unknown:<untitled> #1'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        u'By Module': {'column-widths': [1.0],
                       'expanded-nodes': [],
                       'selected-nodes': [None],
                       'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Attributes': True,
        u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True,
        u'Private': True,
        u'Public': True,
        u'Variables': False}}),
                              ('testing',
                               'tall',
                               0,
                               {'added-files': [loc('oad/builtins/tests/testparser.py'),
        loc('oad/builtins/tests/testbuiltin.py'),
        loc('oad/tests/testpysyntax.py'),
        loc('oad/tests/testdinpy.py'),
        loc('oad/tests/testeval.py')],
                                'filter': '',
                                'recent-filters': None})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [4],
        'notebook_display': 'tabs only',
        'notebook_percent': 0.2756024096385542,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-breakpoints',
                      'wide',
                      1,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      0,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-probe',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['a = set([1,2])\n',
        'a = AttributeError()\n',
        'f = lambda :1\n',
        '{}.do\n',
        'class A: pass\n',
        'function\n'],
                                   u'file:D:/Wing IDE 4.0/src/testing/runners/run_doctests_xml.py': [''\
        'for i, j in wordGraph.edges(): print i, j\n',
        'print sentence\n',
        'print sentence[i:j]\n',
        'for i, j in wordGraph.edges(): print sentence[i:j]\n',
        "for i, j in ij_pairs: print u'\xe4\xb8\xad\xe5\x8d\x8e\xe4\xba\xba\xe6"\
        "\xb0\x91\xe5\x85\xb1\xe5\x92\x8c\xe5\x9b\xbd'[i:j],\n"],
                                   u'file:D:/Wing IDE 4.0/src/testing/runners/run_nosetests_xml.py': [''\
        'x.getvalue(env)\n',
        'values\n',
        'solver.env[e2_2]\n',
        'solver.env[values[0]]\n',
        'solver.env[self.head[0]]\n',
        'self[0]\n',
        'self[1]\n',
        'solver.stream\n',
        'solver.env\n',
        'for k in solver.env: print k, solver.env[k]\n',
        'solver.env[v]\n',
        'self.env\n',
        'for k, v in self.env.bindings.items(): print k,v \n',
        'for k, v in solver.env.bindings.items(): print k,v \n',
        'from oad.term import conslist as L\n',
        "L('a', 'a')\n",
        'solver.env.bindings.keys()\n',
        'env_bindings\n',
        'module[var]\n',
        'head.copy_rule_head(callee_env)\n',
        'caller_env.bindings[value]\n',
        'copy_rule_head(head, callee_env)\n',
        'env.bindings[self]\n',
        's[self]\n',
        'caller_env.bindings[self]\n',
        'caller_env.bindings[v]\n',
        'getvalue(v_value, solver.env)\n',
        'solver.env.bindings\n',
        'argument\n',
        'for k in solver.env.bindings: print k, k.__class__\n',
        'do1.\n',
        'loop1.statements.__class__\n',
        'self.scope==other.scope and self.var==other.var and self.value==oth'\
        'er.value\n',
        'self.var==other.var\n',
        'self.var.__class__\n',
        'result.__class__\n',
        'fun\n',
        'seen\n',
        "fun('when')\n",
        'seen(end)\n',
        'seen(end)/error\n',
        'klass\n',
        'self.class_dict[self.name]\n',
        'self.get_class()\n',
        'v\n',
        'v.__class__\n',
        'item.name\n',
        'self.attrs\n',
        'attr_self.name\n',
        'self.args[0].key\n',
        'args[0].__class__\n',
        'self.args[0].__class__\n',
        'self.state\n',
        'iff.state\n',
        'syntax_result.__data__\n',
        "do1.__data__['body']\n",
        'do1.__data__\n',
        'self.__class__.__dict__\n',
        'self.__class__.__dict__[attr]\n',
        'klass.__base__\n',
        'klass.__bases__\n',
        'result.functions[0].args\n',
        'result.functions[0].name\n',
        'result.functions[0]\n',
        'functions[0]\n',
        'args\n',
        'print self\n',
        'self.args\n',
        'functions\n',
        'functions[0].args\n',
        'apply\n',
        'apply.__dict__\n',
        'apply.__class__.__dict__\n',
        'apply[1]\n',
        "apply['a']\n",
        'apply[12]\n',
        '__syntax__data__\n',
        'self.args[1]\n',
        'fsm.dict[state0]\n',
        'set()\n',
        'fsm.dict[state0].setdefault(self.edge, set())\n',
        'self.name\n',
        'self.edge\n',
        'state1.class_name\n',
        'self.class_name\n',
        'self.__syntax_data__\n',
        'pytuple\n',
        'self.__class\n',
        'self.__class__\n',
        'exps[0]\n',
        'exp\n',
        'let1.__syntax_data__\n',
        'write(1)\n',
        'from oad.builtins.format importm write\n',
        'from oad.builtins.format import write\n',
        'key == write(1)\n',
        'self\n',
        'other\n',
        'head.__class__\n',
        'head\n'],
                                   u'file:e:/oad/oad/ccg.py': ['print co\n'],
                                   u'file:e:/oad/oad/pycfg.py': [],
                                   u'file:e:/oad/oad/rule.py': ['gg.next()\n'],
                                   u'file:e:/oad/oad/syntax.py': ['self.func'\
        'tion\n',
        'attr_self.name\n'],
                                   u'file:e:/web2py_src/applications/seer/modules/linguistics/memory.py': [''\
        'print x\n',
        'print str(x)\n',
        'print repr(x)\n'],
                                   u'file:e:/web2py_src/applications/seer/modules/linguistics/placename.py': [''\
        'for x in pieces: print x\n',
        'print shi_xian\n',
        'for x in shi_xian: print 1, x\n',
        'for x in shi_xian0: print 1, x,\n',
        "for x in shi_xian0: print u'(%s)'%x,\n"],
                                   u'file:e:/web2py_src/applications/seer/modules/linguistics/word.py': [''\
        'path+fileName\n',
        'for place in result: print place,\n']},
                       'sel-line': 4,
                       'sel-line-start': 58,
                       'selection_end': 62,
                       'selection_start': 62}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('python-shell',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 1,
                       'folded-linenos': [],
                       'history': {None: ["re_sentence.split('asdjkl;\\n\\n "\
        "asd')\n",
        "re_sentence = re.compile(r'[ ]*\\r\\n[ ]*')\n",
        "re_sentence.split('asdjkl;r\\n\\n asd')\n",
        "re_sentence = re.compile(r'[ ]*(\\r\\n)|\\n[ ]*')\n",
        "re_sentence = re.compile(r'[ ]*((\\r\\n)|\\n)[ ]*')\n",
        "re_sentence = re.compile(r'[ ]*(\\r\\n)|(\\n)[ ]*')\n",
        "re_sentence = re.compile(r'[ ]*(\\r\\n|\\n)[ ]*')\n",
        "re_sentence = re.compile(r'[ ]*(\\r\\n|\\n|;)[ ]*')\n",
        "re_sentence = re.compile(r'[ ]*(\\r\\n|\\n)*|;)[ ]*')\n",
        "re_sentence = re.compile(r'[ ]*(\\r\\n|\\n)*|;[ ]*')\n",
        "re_sentence.split('asdjkl;\\r\\n\\n asd')\n",
        "re_sentence = re.compile(r'[ ]*((\\r\\n|\\n)+|;)[ ]*')\n",
        "re_sentence = re.compile(r'[ ]*;[ ]*|[ ]*(\\r\\n)+[ ]*|[ ]*\\n+[ ]*"\
        "')\n",
        "re_sentence = re.compile(r'[ ]*(\\r\\n)+|\\n+|;[ ]*')\n",
        "re_sentence = re.compile(r'[ ]*(\\r\\n|\\n)+|;[ ]*')\n",
        "re_sentence.split('asdjkl;\\r\\nafdfd\\n asd')\n",
        'abs(1)\n',
        'abs(0.1)\n',
        'abs(-1)\n',
        'import re\n',
        "r = re.compile(r'[~a-zA-Z()0-9]')\n",
        'import os\n',
        'help(os.path)\n',
        'reduce([1, 2, 3])\n',
        'import operator\n',
        'reduce([1, 2, 3], operator.add)\n',
        'reduce(operator.add, [1, 2, 3])\n',
        'reduce(operator.mul, [1, 2, 3])\n',
        'reduce(operator.mul, [1], [2], [3])\n',
        'reduce(operator.add, [[1], [2], [3]])\n',
        'reduce(operator.mul, [[1], [2], [3]])\n',
        'import random\n',
        'random.randint(1)\n',
        'random.randint(0, 1)\n',
        'random.randint(0, 2)\n',
        'random.randint(0, 2.5)\n',
        'def g():\n',
        '  for i in [1,2]: yield i\n',
        'g = g()\n',
        'g\n',
        'dir(g)\n',
        'help(g.send)\n',
        'g.send(1)\n',
        'g.send()\n',
        'g.send(None)\n',
        'g.send(2)\n',
        'g.send(4)\n',
        'a = AttributeError()\n',
        'dir (a)\n',
        'print ~1\n',
        'print ~+1\n',
        'print ~-1\n',
        'print -~1\n',
        "help(''.find)\n",
        'f = lambda :1\n',
        'f.z = 1\n',
        'print 3:5\n',
        '[3:5]\n',
        'a[3:5]\n',
        '[1,2][3:5]\n',
        'a[:]\n',
        '[1][3:5]\n',
        '[1, 2==3]\n',
        '[(1, 2)==3]\n',
        '[(1, 2)>= 3]\n',
        '(1)[2]\n',
        '[,,]\n',
        'i = 0\n',
        'i[x for x in range(10)]\n',
        'i(x for x in range(10))\n',
        'abs(x for x in range(10))\n',
        '{}.do\n',
        'a= object()\n',
        'a.x = 1\n',
        'class B(object): pass\n',
        'b = B()\n',
        'b.x = 1\n',
        'del b.x\n',
        'b.x\n',
        '1//2\n',
        '1\\2\n',
        'def f(): pass\n',
        'type(f)\n',
        'isinstance(f, function)\n',
        'isinstance(f, Function)\n',
        'isinstance(f, type(f))\n',
        'g = lambda:pass\n',
        'g = lambda:1\n',
        'isinstance(g,type(f))\n',
        'class A: pass\n',
        'class A: \n',
        '  def f(self): pass\n',
        'a = A()\n',
        'a.__dict__\n',
        'A.__dict__\n',
        'A.__base__\n',
        'A\n',
        'class B(A): pass\n',
        'B.__base__\n',
        'function\n']},
                       'sel-line': 6,
                       'sel-line-start': 279,
                       'selection_end': 286,
                       'selection_start': 286}),
                     ('refactoring',
                      'wide',
                      0,
                      {}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 44,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'  def setUp(self): cleanup_vars()\r\n',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'Python Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'form',
                                       'fReverse': False,
                                       'fSearchText': u'statement',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      0,
                      {'node-states': [('eval',
        'repr(solver.env)'),
                                       ('eval',
        'repr(caller_env)'),
                                       ('eval',
        'repr(self)'),
                                       ('eval',
        'repr(exp)'),
                                       ('eval',
        'repr(let1.__syntax_data__)')],
                       'tree-state': {'column-widths': [0.37316561844863733,
        0.62683438155136273],
                                      'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('oad/solve.py'),
        {'attrib-starts': [('Solver',
                            55),
                           ('Solver.cont',
                            117)],
         'first-line': 104,
         'folded-linenos': [],
         'sel-line': 120,
         'sel-line-start': 3241,
         'selection_end': 3272,
         'selection_start': 3241},
        1268157342.937),
        (loc('oad/solve.py'),
         {'attrib-starts': [('Solver',
                             55),
                            ('Solver.cont',
                             117)],
          'first-line': 104,
          'folded-linenos': [],
          'sel-line': 120,
          'sel-line-start': 3241,
          'selection_end': 3241,
          'selection_start': 3241},
         1268157350.484),
        (loc('oad/solve.py'),
         {'attrib-starts': [('Solver',
                             55),
                            ('Solver.cont',
                             117)],
          'first-line': 104,
          'folded-linenos': [],
          'sel-line': 123,
          'sel-line-start': 3378,
          'selection_end': 3405,
          'selection_start': 3405},
         1268157350.8280001),
        (loc('oad/special.py'),
         {'attrib-starts': [('SpecialForm',
                             9),
                            ('SpecialForm.to_sexpression',
                             15)],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 529,
          'selection_end': 633,
          'selection_start': 529},
         1268157400.5929999),
        (loc('oad/term.py'),
         {'attrib-starts': [('Apply',
                             256),
                            ('Apply.__init__',
                             257)],
          'first-line': 250,
          'folded-linenos': [],
          'sel-line': 260,
          'sel-line-start': 8833,
          'selection_end': 8958,
          'selection_start': 8833},
         1268157408.375),
        (loc('oad/special.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 531,
          'selection_end': 639,
          'selection_start': 531},
         1268157437.546),
        (loc('oad/term.py'),
         {'attrib-starts': [('Apply',
                             256),
                            ('Apply.cont',
                             262)],
          'first-line': 250,
          'folded-linenos': [],
          'sel-line': 263,
          'sel-line-start': 8991,
          'selection_end': 9006,
          'selection_start': 9006},
         1268157489.625),
        (loc('oad/special.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 531,
          'selection_end': 639,
          'selection_start': 531},
         1268157497.25),
        (loc('oad/solve.py'),
         {'attrib-starts': [('Solver',
                             55),
                            ('Solver.cont',
                             117)],
          'first-line': 104,
          'folded-linenos': [],
          'sel-line': 120,
          'sel-line-start': 3241,
          'selection_end': 3272,
          'selection_start': 3241},
         1268157550.4679999),
        (loc('oad/term.py'),
         {'attrib-starts': [('Function',
                             286),
                            ('Function.evaluate_cont',
                             287),
                            ('Function.evaluate_cont.evaluate_arguments',
                             288)],
          'first-line': 281,
          'folded-linenos': [],
          'sel-line': 297,
          'sel-line-start': 10276,
          'selection_end': 10343,
          'selection_start': 10276},
         1268157552.0780001),
        (loc('oad/tests/testdinpy.py'),
         {'attrib-starts': [('TestAssignVariable',
                             31),
                            ('TestAssignVariable.test_assign1',
                             32)],
          'first-line': 16,
          'folded-linenos': [],
          'sel-line': 33,
          'sel-line-start': 710,
          'selection_end': 746,
          'selection_start': 746},
         1268157559.8429999),
        (loc('oad/dinpy.py'),
         {'attrib-starts': [],
          'first-line': 61,
          'folded-linenos': [],
          'sel-line': 67,
          'sel-line-start': 1856,
          'selection_end': 1899,
          'selection_start': 1899},
         1268157584.5150001),
        [loc('oad/builtins/type.py'),
         {'attrib-starts': [('head_list',
                             72)],
          'first-line': 22,
          'folded-linenos': [],
          'sel-line': 73,
          'sel-line-start': 2043,
          'selection_end': 2043,
          'selection_start': 2043},
         1268157617.171],
        [loc('oad/dinpy.py'),
         {'attrib-starts': [],
          'first-line': 61,
          'folded-linenos': [],
          'sel-line': 67,
          'sel-line-start': 1856,
          'selection_end': 1899,
          'selection_start': 1899},
         1268157641.8280001],
        [loc('oad/tests/testdinpy.py'),
         {'attrib-starts': [('TestAssignVariable',
                             31),
                            ('TestAssignVariable.test_assign1',
                             32)],
          'first-line': 16,
          'folded-linenos': [],
          'sel-line': 33,
          'sel-line-start': 710,
          'selection_end': 746,
          'selection_start': 746},
         1268157641.9059999],
        [loc('oad/term.py'),
         {'attrib-starts': [('Function',
                             286),
                            ('Function.evaluate_cont',
                             287),
                            ('Function.evaluate_cont.evaluate_arguments',
                             288)],
          'first-line': 281,
          'folded-linenos': [],
          'sel-line': 297,
          'sel-line-start': 10276,
          'selection_end': 10343,
          'selection_start': 10276},
         1268157642.2179999],
        [loc('oad/solve.py'),
         {'attrib-starts': [('Solver',
                             55),
                            ('Solver.cont',
                             117)],
          'first-line': 104,
          'folded-linenos': [],
          'sel-line': 120,
          'sel-line-start': 3241,
          'selection_end': 3272,
          'selection_start': 3241},
         1268157642.312],
        [loc('oad/special.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 531,
          'selection_end': 639,
          'selection_start': 531},
         1268157642.625],
        [loc('oad/tests/testeval.py'),
         {'attrib-starts': [('TestControl',
                             37),
                            ('TestControl.testif_add_sub',
                             42)],
          'first-line': 26,
          'folded-linenos': [],
          'sel-line': 42,
          'sel-line-start': 1234,
          'selection_end': 1262,
          'selection_start': 1234},
         1268157643.296],
        [loc('samples/sample.py'),
         {'attrib-starts': [],
          'first-line': 54,
          'folded-linenos': [],
          'sel-line': 65,
          'sel-line-start': 2042,
          'selection_end': 2061,
          'selection_start': 2061},
         1268157657.187]],
        19),
        'current-loc': loc('samples/sample.py'),
        'editor-states': {loc('samples/sample.py'): {'attrib-starts': [],
        'first-line': 82,
        'folded-linenos': [],
        'sel-line': 105,
        'sel-line-start': 3157,
        'selection_end': 3187,
        'selection_start': 3187}},
        'has-focus': False},
                               'open_files': [u'samples/sample.py']},
        'split_percents': {0: 0.5},
        'splits': 1,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.96084337349397586},
                 'splits': 2,
                 'tab_location': 'right',
                 'user_data': {}},
        'window-alloc': (192,
                         5,
                         1004,
                         718)}]}
guimgr.recent-documents = [loc('samples/sample.py')]
guimgr.visual-state = {loc('file:D:/Wing IDE 4.0/src/testing/runners/wingtest_common.py'): {''\
        'attrib-starts': [('XmlStream',
                           16),
                          ('XmlStream.__getattr__',
                           25)],
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 559,
        'selection_end': 559,
        'selection_start': 559},
                       loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/case.py'): {''\
        'attrib-starts': [('TestBase',
                           177),
                          ('TestBase.runTest',
                           185)],
        'first-line': 170,
        'folded-linenos': [],
        'sel-line': 186,
        'sel-line-start': 5858,
        'selection_end': 5858,
        'selection_start': 5858},
                       loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/failure.py'): {''\
        'attrib-starts': [('Failure',
                           10),
                          ('Failure.runTest',
                           34)],
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 38,
        'sel-line-start': 1071,
        'selection_end': 1071,
        'selection_start': 1071},
                       loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/importer.py'): {''\
        'attrib-starts': [('Importer',
                           15),
                          ('Importer.importFromDir',
                           40)],
        'first-line': 75,
        'folded-linenos': [],
        'sel-line': 87,
        'sel-line-start': 3447,
        'selection_end': 3447,
        'selection_start': 3447},
                       loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/loader.py'): {''\
        'attrib-starts': [('TestLoader',
                           43),
                          ('TestLoader.loadTestsFromName',
                           333)],
        'first-line': 374,
        'folded-linenos': [],
        'sel-line': 389,
        'sel-line-start': 16180,
        'selection_end': 16180,
        'selection_start': 16180},
                       loc('file:d:/python26/Lib/site-packages/nose-1.0.0-py2.6.egg/nose/tools.py'): {''\
        'attrib-starts': [('eq_',
                           29)],
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 32,
        'sel-line-start': 663,
        'selection_end': 726,
        'selection_start': 663},
                       loc('file:d:/python26/Lib/site-packages/yieldprolog/BagofAnswers.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:d:/python26/Lib/site-packages/yieldprolog/FindallAnswers.py'): {''\
        'attrib-starts': [('FindallAnswers',
                           33),
                          ('FindallAnswers.findallArray',
                           61)],
        'first-line': 35,
        'folded-linenos': [],
        'sel-line': 67,
        'sel-line-start': 2868,
        'selection_end': 2868,
        'selection_start': 2868},
                       loc('file:d:/python26/Lib/site-packages/yieldprolog/Functor1.py'): {''\
        'attrib-starts': [],
        'first-line': 46,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:d:/python26/Lib/site-packages/yieldprolog/Functor2.py'): {''\
        'attrib-starts': [('Functor2',
                           32),
                          ('Functor2.addUniqueVariables',
                           83)],
        'first-line': 39,
        'folded-linenos': [],
        'sel-line': 84,
        'sel-line-start': 3674,
        'selection_end': 3728,
        'selection_start': 3728},
                       loc('file:d:/python26/Lib/site-packages/yieldprolog/ListPair.py'): {''\
        'attrib-starts': [],
        'first-line': 66,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:d:/python26/Lib/site-packages/yieldprolog/PrologException.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:d:/python26/Lib/site-packages/yieldprolog/Variable.py'): {''\
        'attrib-starts': [('Variable',
                           33),
                          ('Variable.unify',
                           64)],
        'first-line': 54,
        'folded-linenos': [],
        'sel-line': 82,
        'sel-line-start': 3682,
        'selection_end': 3682,
        'selection_start': 3682},
                       loc('file:d:/python26/Lib/site-packages/yieldprolog/YP.py'): {''\
        'attrib-starts': [('YP',
                           32),
                          ('YP.unifyArrays',
                           404)],
        'first-line': 399,
        'folded-linenos': [],
        'sel-line': 404,
        'sel-line-start': 13883,
        'selection_end': 13910,
        'selection_start': 13910},
                       loc('file:d:/python26/Lib/site-packages/yieldprolog/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('file:d:/python26/Lib/unittest.py'): {'attrib-sta'\
        'rts': [('TestCase',
                 176),
                ('TestCase.run',
                 263)],
        'first-line': 274,
        'folded-linenos': [],
        'sel-line': 279,
        'sel-line-start': 10138,
        'selection_end': 10138,
        'selection_start': 10138},
                       loc('../daot/dao/builtins/arithpred.py'): {'attrib-st'\
        'arts': [('define',
                  100)],
        'first-line': 85,
        'folded-linenos': [],
        'sel-line': 100,
        'sel-line-start': 3496,
        'selection_end': 3518,
        'selection_start': 3518},
                       loc('../daot/dao/builtins/atom.py'): {'attrib-starts': [],
        'first-line': 143,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../daot/dao/builtins/callcc.py'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../daot/dao/builtins/control.py'): {'attrib-star'\
        'ts': [('not_',
                115)],
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 119,
        'sel-line-start': 4763,
        'selection_end': 4824,
        'selection_start': 4824},
                       loc('../daot/dao/builtins/module.py'): {'attrib-start'\
        's': [('from_',
               11)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 344,
        'selection_end': 391,
        'selection_start': 346},
                       loc('../daot/dao/builtins/tests/testbuiltin.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../daot/dao/cont.py'): {'attrib-starts': [('Rule'\
        'SetContinuation',
        73),
        ('RuleSetContinuation.activate',
         79)],
        'first-line': 95,
        'folded-linenos': [],
        'sel-line': 82,
        'sel-line-start': 3280,
        'selection_end': 3311,
        'selection_start': 3311},
                       loc('../daot/dao/eval.py'): {'attrib-starts': [('Eval'\
        'uator',
        11)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 473,
        'selection_end': 489,
        'selection_start': 489},
                       loc('../daot/dao/rule.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../daot/dao/sexpression.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 969,
        'selection_end': 1011,
        'selection_start': 1011},
                       loc('../daot/dao/term.py'): {'attrib-starts': [('Cons',
        375),
        ('Cons.compile',
         396)],
        'first-line': 377,
        'folded-linenos': [],
        'sel-line': 398,
        'sel-line-start': 14413,
        'selection_end': 14445,
        'selection_start': 14445},
                       loc('../daot/dao/tests/testbuiltingrammar.py'): {'att'\
        'rib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../daot/dao/tests/testeval.py'): {'attrib-starts': [(''\
        'TestMacro',
        156),
        ('TestMacro.test4',
         172)],
        'first-line': 140,
        'folded-linenos': [],
        'sel-line': 173,
        'sel-line-start': 7670,
        'selection_end': 7693,
        'selection_start': 7693},
                       loc('../daot/dao/tests/testsexpression.py'): {'attrib'\
        '-starts': [('Testeval',
                     112),
                    ('Testeval.testblock',
                     151)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 154,
        'sel-line-start': 6835,
        'selection_end': 6935,
        'selection_start': 6902},
                       loc('../daot/dao/tests/testterm.py'): {'attrib-starts': [],
        'first-line': 68,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('oad/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 26,
        'selection_start': 26},
                       loc('oad/builtin.py'): {'attrib-starts': [('BuiltinMa'\
        'cro',
        27),
        ('BuiltinMacro.__call__',
         28)],
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 29,
        'sel-line-start': 873,
        'selection_end': 873,
        'selection_start': 873},
                       loc('oad/builtins/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 203,
        'selection_end': 246,
        'selection_start': 246},
                       loc('oad/builtins/arith.py'): {'attrib-starts': [('eq',
        16)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 339,
        'selection_end': 339,
        'selection_start': 339},
                       loc('oad/builtins/arithpred.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 758,
        'selection_end': 963,
        'selection_start': 758},
                       loc('oad/builtins/atom.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 23,
        'selection_end': 71,
        'selection_start': 71},
                       loc('oad/builtins/callcc.py'): {'attrib-starts': [('C'\
        'ontinuationFunction',
        6),
        ('ContinuationFunction.apply',
         7)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 260,
        'selection_end': 266,
        'selection_start': 266},
                       loc('oad/builtins/control.py'): {'attrib-starts': [(''\
        'and_',
        33)],
        'first-line': 7,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 668,
        'selection_end': 668,
        'selection_start': 668},
                       loc('oad/builtins/findall.py'): {'attrib-starts': [(''\
        'findall',
        6)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 372,
        'selection_end': 376,
        'selection_start': 376},
                       loc('oad/builtins/format.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 36,
        'selection_end': 36,
        'selection_start': 36},
                       loc('oad/builtins/lineparser.py'): {'attrib-starts': [(''\
        'LineStream',
        9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 278,
        'selection_end': 294,
        'selection_start': 294},
                       loc('oad/builtins/matchterm.py'): {'attrib-starts': [(''\
        'seplist',
        136)],
        'first-line': 123,
        'folded-linenos': [],
        'sel-line': 143,
        'sel-line-start': 5512,
        'selection_end': 5512,
        'selection_start': 5512},
                       loc('oad/builtins/metacall.py'): {'attrib-starts': [(''\
        'once',
        9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 236,
        'selection_end': 236,
        'selection_start': 236},
                       loc('oad/builtins/module.py'): {'attrib-starts': [('f'\
        'rom_',
        5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 146,
        'selection_end': 146,
        'selection_start': 146},
                       loc('oad/builtins/parser.py'): {'attrib-starts': [('p'\
        'arse',
        8)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 199,
        'selection_end': 199,
        'selection_start': 199},
                       loc('oad/builtins/quasiquote.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 145,
        'sel-line-start': 5320,
        'selection_end': 5320,
        'selection_start': 5320},
                       loc('oad/builtins/rule.py'): {'attrib-starts': [('ret'\
        'ract',
        25)],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 35,
        'sel-line-start': 993,
        'selection_end': 1073,
        'selection_start': 1073},
                       loc('oad/builtins/term.py'): {'attrib-starts': [('get'\
        'value',
        9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 231,
        'selection_end': 258,
        'selection_start': 258},
                       loc('oad/builtins/terminal.py'): {'attrib-starts': [(''\
        'nullword',
        83)],
        'first-line': 57,
        'folded-linenos': [],
        'sel-line': 84,
        'sel-line-start': 2605,
        'selection_end': 2605,
        'selection_start': 2605},
                       loc('oad/builtins/tests/testbuiltin.py'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('oad/builtins/tests/testparser.py'): {'attrib-sta'\
        'rts': [('Testterminal',
                 62)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 62,
        'sel-line-start': 2761,
        'selection_end': 2781,
        'selection_start': 2761},
                       loc('oad/builtins/type.py'): {'attrib-starts': [('hea'\
        'd_list',
        72)],
        'first-line': 47,
        'folded-linenos': [],
        'sel-line': 73,
        'sel-line-start': 2043,
        'selection_end': 2157,
        'selection_start': 2043},
                       loc('oad/builtins/unify.py'): {'attrib-starts': [('no'\
        'tunify',
        14)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 516,
        'selection_end': 516,
        'selection_start': 516},
                       loc('oad/ccg.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 213,
        'selection_end': 213,
        'selection_start': 213},
                       loc('oad/cont.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 33,
        'selection_end': 67,
        'selection_start': 67},
                       loc('oad/dinpy.py'): {'attrib-starts': [],
        'first-line': 61,
        'folded-linenos': [],
        'sel-line': 67,
        'sel-line-start': 1856,
        'selection_end': 1899,
        'selection_start': 1899},
                       loc('oad/dinpycfg.py'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 1252,
        'selection_end': 1270,
        'selection_start': 1270},
                       loc('oad/env.py'): {'attrib-starts': [('ExtendEnviron'\
        'ment',
        38),
        ('ExtendEnvironment.__getitem__',
         41)],
        'first-line': 25,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 1409,
        'selection_end': 1409,
        'selection_start': 1409},
                       loc('oad/error.py'): {'attrib-starts': [('Error',
        0)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 11,
        'selection_start': 11},
                       loc('oad/eval.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('oad/helper.py'): {'attrib-starts': [('atomic',
        7)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 163,
        'selection_end': 179,
        'selection_start': 179},
                       loc('oad/parse.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('oad/pycfg.py'): {'attrib-starts': [('dotword',
        126)],
        'first-line': 98,
        'folded-linenos': [],
        'sel-line': 126,
        'sel-line-start': 5018,
        'selection_end': 5057,
        'selection_start': 5057},
                       loc('oad/pycfg2.py'): {'attrib-starts': [('lead',
        326)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 330,
        'sel-line-start': 10263,
        'selection_end': 10263,
        'selection_start': 10263},
                       loc('oad/pysyntax.py'): {'attrib-starts': [('call',
        201)],
        'first-line': 175,
        'folded-linenos': [],
        'sel-line': 202,
        'sel-line-start': 7477,
        'selection_end': 7477,
        'selection_start': 7477},
                       loc('oad/rule.py'): {'attrib-starts': [('Rule',
        5),
        ('Rule.__eq__',
         33)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1230,
        'selection_end': 1230,
        'selection_start': 1230},
                       loc('oad/solve.py'): {'attrib-starts': [('Solver',
        55),
        ('Solver.cont',
         117)],
        'first-line': 104,
        'folded-linenos': [],
        'sel-line': 120,
        'sel-line-start': 3241,
        'selection_end': 3272,
        'selection_start': 3241},
                       loc('oad/special.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 531,
        'selection_end': 639,
        'selection_start': 531},
                       loc('oad/syntax.py'): {'attrib-starts': [('SeeFunctio'\
        'n',
        266)],
        'first-line': 245,
        'folded-linenos': [],
        'sel-line': 266,
        'sel-line-start': 7949,
        'selection_end': 8255,
        'selection_start': 7949},
                       loc('oad/term.py'): {'attrib-starts': [('Function',
        286),
        ('Function.evaluate_cont',
         287),
        ('Function.evaluate_cont.evaluate_arguments',
         288)],
        'first-line': 281,
        'folded-linenos': [],
        'sel-line': 297,
        'sel-line-start': 10276,
        'selection_end': 10343,
        'selection_start': 10276},
                       loc('oad/tests/syntax.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 252,
        'selection_end': 270,
        'selection_start': 270},
                       loc('oad/tests/testdinpy.py'): {'attrib-starts': [('T'\
        'estAssignVariable',
        31),
        ('TestAssignVariable.test_assign1',
         32)],
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 33,
        'sel-line-start': 710,
        'selection_end': 746,
        'selection_start': 746},
                       loc('oad/tests/testeval.py'): {'attrib-starts': [('Te'\
        'stControl',
        37),
        ('TestControl.testif_add_sub',
         42)],
        'first-line': 26,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 1234,
        'selection_end': 1262,
        'selection_start': 1234},
                       loc('oad/tests/testpycfg.py'): {'attrib-starts': [],
        'first-line': 67,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 24,
        'selection_start': 0},
                       loc('oad/tests/testpysyntax.py'): {'attrib-starts': [(''\
        'TestParse',
        23)],
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 740,
        'selection_end': 757,
        'selection_start': 740},
                       loc('oad/tests/testsexpression.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('oad/tests/testsyntax.py'): {'attrib-starts': [],
        'first-line': 28,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 24,
        'selection_start': 0},
                       loc('oad/testutil.py'): {'attrib-starts': [('xxxclean'\
        'up_vars',
        7)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 239,
        'selection_end': 246,
        'selection_start': 246},
                       loc('oad/trail.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('samples/hello.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 455,
        'selection_end': 488,
        'selection_start': 488},
                       loc('samples/sample.py'): {'attrib-starts': [],
        'first-line': 54,
        'folded-linenos': [],
        'sel-line': 65,
        'sel-line-start': 2042,
        'selection_end': 2061,
        'selection_start': 2061},
                       loc('samples/sexpression.py'): {'attrib-starts': [],
        'first-line': 5,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 434,
        'selection_end': 1599,
        'selection_start': 434},
                       loc('../web2py_src/applications/seer/modules/dao/builtins/tests/testparser.py'): {''\
        'attrib-starts': [('Testterminal',
                           62),
                          ('Testterminal.test_char',
                           63)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 63,
        'sel-line-start': 2931,
        'selection_end': 2953,
        'selection_start': 2953},
                       loc('unknown:<untitled> #14'): {'attrib-starts': [('A'\
        'nd',
        601),
        ('And.__call__',
         606)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 609,
        'sel-line-start': 17417,
        'selection_end': 17441,
        'selection_start': 17441},
                       loc('unknown:<untitled> #15'): {'attrib-starts': [('g'\
        '2',
        0)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #16'): {'attrib-starts': [],
        'first-line': 27,
        'folded-linenos': [],
        'sel-line': 59,
        'sel-line-start': 2132,
        'selection_end': 2142,
        'selection_start': 2142},
                       loc('unknown:<untitled> #17'): {'attrib-starts': [('u'\
        'rlunsplit',
        167)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 172,
        'sel-line-start': 7193,
        'selection_end': 7225,
        'selection_start': 7225}}
proj.env-vars = {None: ('default',
                        ['']),
                 loc('file:D:/Wing IDE 4.0/src/testing/runners/run_nosetests_xml.py'): (''\
        'project',
        ['']),
                 loc('oad/__init__.py'): ('project',
        ['']),
                 loc('oad/ccg.py'): ('project',
                                     ['']),
                 loc('oad/dinpy.py'): ('project',
                                       ['']),
                 loc('oad/env.py'): ('project',
                                     ['']),
                 loc('oad/eval.py'): ('project',
                                      ['']),
                 loc('oad/pycfg.py'): ('project',
                                       ['']),
                 loc('oad/rule.py'): ('project',
                                      ['']),
                 loc('oad/syntax.py'): ('project',
        ['']),
                 loc('oad/term.py'): ('project',
                                      ['']),
                 loc('oad/tests/testdinpy.py'): ('project',
        ['']),
                 loc('oad/tests/testeval.py'): ('project',
        ['']),
                 loc('oad/tests/testsyntax.py'): ('project',
        ['']),
                 loc('samples/sample.py'): ('project',
        [''])}
proj.pypath = {None: ('custom',
                      'e:\\oad\\')}
search.replace-history = [u'+',
                          u'__iter__',
                          u'__lshift__',
                          u'[__eq__',
                          u'[__getattr__',
                          u'Continuation:#(']
search.search-history = [u'&',
                         u'iter__',
                         u'lshift',
                         u'[eq',
                         u'[getattr',
                         u'Leader',
                         u'statement',
                         u'sta',
                         u'S',
                         u'translate',
                         u'to_sexpression',
                         u'literal, ',
                         u'mycont',
                         u'my',
                         u'(solver, arg)',
                         u'evaluator',
                         u'while_',
                         u'Evaluator',
                         u'evaluator.trail',
                         u'SUCCESS']
